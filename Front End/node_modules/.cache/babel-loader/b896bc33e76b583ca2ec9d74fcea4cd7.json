{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useContext, useRef } from 'react';\nimport Enhancer from '../enhancer';\nimport StyleKeeper from '../style-keeper';\nimport StyleSheet from './style-sheet';\nimport { StyleKeeperContext, RadiumConfigContext } from '../context';\n\nfunction getStyleKeeper(configProp, configContext) {\n  var userAgent = configProp && configProp.userAgent || configContext && configContext.userAgent;\n  return new StyleKeeper(userAgent);\n}\n\nvar StyleRootInner = Enhancer(function (_ref) {\n  var children = _ref.children,\n      otherProps = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(\"div\", otherProps, children, React.createElement(StyleSheet, null));\n});\n\nvar StyleRoot = function StyleRoot(props) {\n  /* eslint-disable no-unused-vars */\n  // Pass down all props except config to the rendered div.\n\n  /* eslint-enable no-unused-vars */\n  var radiumConfig = props.radiumConfig;\n  var configContext = useContext(RadiumConfigContext);\n  var styleKeeper = useRef(getStyleKeeper(radiumConfig, configContext));\n  return React.createElement(StyleKeeperContext.Provider, {\n    value: styleKeeper.current\n  }, React.createElement(StyleRootInner, props));\n};\n\nexport default StyleRoot;","map":null,"metadata":{},"sourceType":"module"}