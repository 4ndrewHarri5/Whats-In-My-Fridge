{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport cssRuleSetToString from '../css-rule-set-to-string';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRadiumContexts } from '../context';\n\nvar Style =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Style, _PureComponent);\n\n  function Style() {\n    _classCallCheck(this, Style);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Style).apply(this, arguments));\n  }\n\n  _createClass(Style, [{\n    key: \"_buildStyles\",\n    value: function _buildStyles(styles) {\n      var _this = this;\n\n      var userAgent = this.props.radiumConfig && this.props.radiumConfig.userAgent || this.props.radiumConfigContext && this.props.radiumConfigContext.userAgent;\n      var scopeSelector = this.props.scopeSelector;\n      var rootRules = Object.keys(styles).reduce(function (accumulator, selector) {\n        if (_typeof(styles[selector]) !== 'object') {\n          accumulator[selector] = styles[selector];\n        }\n\n        return accumulator;\n      }, {});\n      var rootStyles = Object.keys(rootRules).length ? cssRuleSetToString(scopeSelector || '', rootRules, userAgent) : '';\n      return rootStyles + Object.keys(styles).reduce(function (accumulator, selector) {\n        var rules = styles[selector];\n\n        if (selector === 'mediaQueries') {\n          accumulator += _this._buildMediaQueryString(rules);\n        } else if (_typeof(styles[selector]) === 'object') {\n          var completeSelector = scopeSelector ? selector.split(',').map(function (part) {\n            return scopeSelector + ' ' + part.trim();\n          }).join(',') : selector;\n          accumulator += cssRuleSetToString(completeSelector, rules, userAgent);\n        }\n\n        return accumulator;\n      }, '');\n    }\n  }, {\n    key: \"_buildMediaQueryString\",\n    value: function _buildMediaQueryString(stylesByMediaQuery) {\n      var _this2 = this;\n\n      var mediaQueryString = '';\n      Object.keys(stylesByMediaQuery).forEach(function (query) {\n        mediaQueryString += '@media ' + query + '{' + _this2._buildStyles(stylesByMediaQuery[query]) + '}';\n      });\n      return mediaQueryString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.rules) {\n        return null;\n      }\n\n      var styles = this._buildStyles(this.props.rules);\n\n      return React.createElement(\"style\", {\n        dangerouslySetInnerHTML: {\n          __html: styles\n        }\n      });\n    }\n  }]);\n\n  return Style;\n}(PureComponent);\n\nStyle.propTypes = {\n  radiumConfig: PropTypes.object,\n  rules: PropTypes.object,\n  scopeSelector: PropTypes.string\n};\nStyle.defaultProps = {\n  scopeSelector: ''\n};\nexport default withRadiumContexts(Style);","map":null,"metadata":{},"sourceType":"module"}