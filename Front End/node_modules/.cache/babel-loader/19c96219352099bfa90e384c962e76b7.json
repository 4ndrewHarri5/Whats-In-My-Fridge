{"ast":null,"code":"import _defineProperty from \"/Users/harrisa/dev/learning/react/first-react-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/harrisa/dev/learning/react/first-react-project/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport classes from './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: 'Andrew',\n        age: 19,\n        uID: 'hwef73qgwe'\n      }, {\n        name: 'Harris',\n        age: 20,\n        uID: 'hqk78f74f2'\n      }],\n      showPersons: false\n    };\n\n    this.deletePersonHandler = index => {\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const currentShow = this.state.showPersons;\n      this.setState({\n        showPersons: !currentShow\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.uID === id;\n      });\n\n      const person = _objectSpread({}, this.state.persons[personIndex]); //set name to person\n\n\n      person.name = event.target.value; //now update array at index\n\n      const persons = [...this.state.persons];\n      persons[personIndex] = person; //then set the state\n\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid #eee',\n      padding: '8px',\n      borderRadius: '50vh',\n      boxShadow: '0 0px 20px rgba(0, 0, 0, 0.1)',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.uID,\n          changed: event => this.nameChangedHandler(event, person.uID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = 'red';\n    }\n\n    const assignedClasses = [];\n\n    if (this.state.persons.length <= 2) {\n      assignedClasses.push(classes.red); // classes = ['red']\n    }\n\n    if (this.state.persons.length <= 1) {\n      assignedClasses.push(classes.bold); //classes = ['red', 'bold']\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"First React App\"), React.createElement(\"p\", {\n      className: assignedClasses.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Testing changing class names\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Toggle People\"), persons);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/harrisa/dev/learning/react/first-react-project/src/App.js"],"names":["React","Component","classes","Person","App","state","persons","name","age","uID","showPersons","deletePersonHandler","index","splice","setState","togglePersonsHandler","currentShow","nameChangedHandler","event","id","personIndex","findIndex","p","person","target","value","render","style","backgroundColor","color","font","border","padding","borderRadius","boxShadow","cursor","map","assignedClasses","length","push","red","bold","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component{\n\n  state = {\n    persons: [\n      {name: 'Andrew', age: 19, uID: 'hwef73qgwe'}, \n      {name: 'Harris', age: 20, uID: 'hqk78f74f2'} \n    ],\n    showPersons: false\n  };\n\n  deletePersonHandler = (index) => {\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(index, 1);\n    this.setState({persons: persons})\n  }\n\n  togglePersonsHandler = () => {\n    const currentShow = this.state.showPersons\n    this.setState({\n      showPersons: !currentShow\n    });\n  }\n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.uID === id;\n    });\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    //set name to person\n    person.name = event.target.value;\n\n    //now update array at index\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    //then set the state\n    this.setState({persons: persons});\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid #eee',\n      padding: '8px',\n      borderRadius: '50vh',\n      boxShadow: '0 0px 20px rgba(0, 0, 0, 0.1)',\n      cursor: 'pointer'\n    };\n\n    let persons = null;\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => { \n          return <Person \n            click={() => this.deletePersonHandler(index)}\n            name={person.name} \n            age={person.age}\n            key={person.uID}\n            changed={(event) => this.nameChangedHandler(event, person.uID)}\n            />\n          })}\n        </div>\n      );\n\n      style.backgroundColor = 'red';\n\n    }\n\n    const assignedClasses = [];\n    if (this.state.persons.length <= 2) {\n      assignedClasses.push(classes.red); // classes = ['red']\n    }\n    if(this.state.persons.length <= 1) {\n      assignedClasses.push(classes.bold); //classes = ['red', 'bold']\n    }\n\n    return(\n      <div className={classes.App}>\n        <h1>First React App</h1>\n        <p className={assignedClasses.join(' ')}>Testing changing class names</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}\n        >Toggle People</button>\n        {persons}\n      </div> \n    );\n  }\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}